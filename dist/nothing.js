!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.nothing=t():e.nothing=t()}(window,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";function n(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var r=[],n=!0,o=!1,c=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,c=e}finally{try{n||null==u.return||u.return()}finally{if(o)throw c}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){u(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}r.r(t),r.d(t,"init",(function(){return f})),r.d(t,"ejectDispatch",(function(){return a}));var f=function(e){for(var t={},r={},c=Object.keys(e),u=0;u<c.length;u++){var f=c[u],a=e[f];r[f]=a.state;for(var l=Object.keys(a.reducers),p=0;p<l.length;p++){var s=l[p];t["".concat(f,"/").concat(s)]=a.reducers[s]}}return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r,c=arguments.length>1?arguments[1]:void 0,u=t[c.type],f=i({},e);if(u){var a=c.type,l=c.payload,p=a.split("/"),s=o(p,1),y=s[0];return f[y]=u.apply(void 0,[e[y]].concat(n(l))),f}return console.log("未找到注册的Reducers"),f}},a=function(e,t){for(var r=Object.keys(t),n=0;n<r.length;n++){var o=r[n],c=t[o];e[o]=i({},t.effects);for(var u=Object.keys(c.effects),f=0;f<u.length;f++){var a=u[f];e[o][a]=c.effects[a].bind(e[o])}for(var l=Object.keys(c.reducers),p=function(t){var r=l[t],n="".concat(o,"/").concat(r);e[o][r]=function(){for(var t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return e({type:n,payload:r})}},s=0;s<l.length;s++)p(s)}return e},l=null,p={init:function(e){return f(l=e)},ejectDispatch:function(e){l?e?a(e,l):console.log("请传入redux/store的dispatch方法"):console.log("请先调用ReduxTool.init()注入models")}};t.default=p}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,